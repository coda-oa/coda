[project]
name = "coda"
version = "0.1.0"
description = ""
authors = [{ name = "Sven Marcus", email = "sven.marcus@tu-braunschweig.de" }]
dependencies = [
    "Django<5",
    "django-environ>=0.11.2",
    "psycopg>=3.1.12",
    "django-stubs-ext>=4.2.7",
    "httpx>=0.25.2",
    "argon2-cffi>=23.1.0",
]
requires-python = ">=3.11"
readme = "README.md"
license = { text = "GPL-3.0-or-later" }

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.dev-dependencies]
dev = [
    "mypy>=1.7.1",
    "pre-commit>=3.5.0",
    "ruff>=0.1.1",
    "black>=23.10.1",
    "djlint>=1.34.0",
    "pytest-django>=4.5.2",
    "django-stubs[compatible-mypy]>=4.2.7",
    "pytest-sugar>=0.9.7",
    "pytest-clarity>=1.0.1",
    "commitizen>=3.13.0",
]
django-commands = [
    "polars>=0.20.5",
]

[tool.pdm.scripts]
unittests = "pytest -m 'not integration' -vv"
alltests = "pytest -vv"

[tool.black]
line-length = 100

[tool.mypy]
mypy_path = "$MYPY_CONFIG_FILE_DIR:$MYPY_CONFIG_FILE_DIR/src"
packages = ["coda", "tests"]

strict = true
check_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
show_error_codes = true

plugins = ["mypy_django_plugin.main"]

[[tool.mypy.overrides]]
# Django migrations should not produce any errors:
module = "*.migrations.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "django-environ"
ignore_missing_imports = true

[tool.django-stubs]
strict_settings = false
django_settings_module = "config.settings.production"

[tool.pytest.ini_options]
markers = ["integration: mark test as integration test"]

[tool.ruff]
target-version = "py312"

force-exclude = true
line-length = 100

src = ["src", "tests"]
extend-exclude = ["migrations"]
